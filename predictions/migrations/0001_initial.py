# Generated by Django 5.2 on 2025-06-04 22:44

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('ranking', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='RacingTeam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('points', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
            ],
            options={
                'ordering': ['-points', 'name'],
            },
        ),
        migrations.CreateModel(
            name='SeasonSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season', models.IntegerField()),
                ('amount_drivers', models.IntegerField()),
                ('amount_teams', models.IntegerField()),
                ('race_points_pred', models.JSONField()),
                ('sprint_points_pred', models.JSONField()),
                ('qualy_points_pred', models.IntegerField()),
                ('limit_ch_pred', models.DateField()),
            ],
        ),
        migrations.CreateModel(
            name='Driver',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('number', models.IntegerField()),
                ('country', models.CharField(blank=True, max_length=70, null=True)),
                ('headshot', models.URLField(blank=True, max_length=500, null=True)),
                ('points', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('is_active', models.BooleanField(default=True)),
                ('racing_team', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='drivers', to='predictions.racingteam')),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='drivers', to='predictions.seasonsettings')),
            ],
            options={
                'ordering': ['-points', 'number'],
            },
        ),
        migrations.CreateModel(
            name='ChampionPrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('season_score', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='champion_preds', to='ranking.seasonscore')),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='predictions.driver')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='predictions.racingteam')),
            ],
        ),
        migrations.AddField(
            model_name='racingteam',
            name='season',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='racing_teams', to='predictions.seasonsettings'),
        ),
        migrations.CreateModel(
            name='GrandPrix',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=100)),
                ('country', models.CharField(max_length=100)),
                ('date', models.DateField()),
                ('start_date', models.DateField()),
                ('n_round', models.IntegerField(null=True, unique=True)),
                ('event_format', models.CharField(choices=[('testing', 'testing'), ('conventional', 'normal'), ('sprint_qualifying', 'sprint')], default='testing', max_length=50)),
                ('ended', models.BooleanField(default=False)),
                ('lineup_associated', models.BooleanField(default=False)),
                ('season', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='gps', to='predictions.seasonsettings')),
            ],
            options={
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_type', models.CharField(choices=[('Practice 1', 'FP1'), ('Practice 2', 'FP2'), ('Practice 3', 'FP3'), ('Qualifying', 'Q'), ('Sprint Qualifying', 'SQ'), ('Sprint', 'S'), ('Race', 'Race')], max_length=50)),
                ('session_date', models.DateTimeField()),
                ('state', models.CharField(choices=[('NOT FINISHED', 'NF'), ('FINISHED WAITING COMPARE', 'FWC'), ('FINISHED', 'F')], default='NF', max_length=50)),
                ('grand_prix', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sessions', to='predictions.grandprix')),
            ],
            options={
                'ordering': ['session_date'],
            },
        ),
        migrations.CreateModel(
            name='ResultPole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('lap_time', models.DurationField(blank=True, null=True)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='predictions.driver')),
                ('for_which_team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='predictions.racingteam')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='pole_result', to='predictions.session')),
            ],
        ),
        migrations.CreateModel(
            name='Result',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.IntegerField()),
                ('laps_completed', models.IntegerField()),
                ('fastest_lap', models.DurationField(blank=True, null=True)),
                ('fastest_lap_session', models.BooleanField(default=False)),
                ('disqualified', models.BooleanField(default=False)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='predictions.driver')),
                ('for_which_team', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='predictions.racingteam')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='race_results', to='predictions.session')),
            ],
            options={
                'ordering': ['position'],
            },
        ),
        migrations.CreateModel(
            name='RaceLineUp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('participated', models.BooleanField(default=True)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participations', to='predictions.driver')),
                ('team', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='participations', to='predictions.racingteam')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='drivers', to='predictions.session')),
            ],
        ),
        migrations.CreateModel(
            name='Prediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points_scored', models.DecimalField(decimal_places=2, default=0, max_digits=6)),
                ('season_score', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='predictions', to='ranking.seasonscore')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predictions', to='predictions.session')),
            ],
            options={
                'ordering': ['-points_scored', 'season_score'],
            },
        ),
        migrations.CreateModel(
            name='PredictedPosition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('position', models.IntegerField()),
                ('correct', models.BooleanField(default=False)),
                ('driver', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='predictions.driver')),
                ('prediction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predicted_positions', to='predictions.prediction')),
            ],
            options={
                'ordering': ['position'],
                'indexes': [models.Index(fields=['prediction', 'driver'], name='predictions_predict_64597f_idx'), models.Index(fields=['position'], name='predictions_positio_d5a41d_idx')],
                'unique_together': {('prediction', 'driver')},
            },
        ),
        migrations.CreateModel(
            name='PredictedPole',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('correct', models.BooleanField(default=False)),
                ('driver', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='predictions.driver')),
                ('prediction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predicted_pole', to='predictions.prediction')),
            ],
            options={
                'constraints': [models.UniqueConstraint(fields=('prediction',), name='unique_prediction_for_pole')],
            },
        ),
        migrations.AddIndex(
            model_name='grandprix',
            index=models.Index(fields=['date', 'name', 'country'], name='predictions_date_a626a8_idx'),
        ),
        migrations.AddIndex(
            model_name='result',
            index=models.Index(fields=['driver', 'session'], name='predictions_driver__f8c4ab_idx'),
        ),
        migrations.AddIndex(
            model_name='result',
            index=models.Index(fields=['position'], name='predictions_positio_963c28_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='racelineup',
            unique_together={('session', 'driver')},
        ),
        migrations.AddConstraint(
            model_name='prediction',
            constraint=models.UniqueConstraint(fields=('season_score', 'session'), name='unique_prediction_per_season_score_per_session'),
        ),
    ]
